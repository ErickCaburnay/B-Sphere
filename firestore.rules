rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions for authentication
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && (
        // Check custom claims for admin role
        request.auth.token.role in ['admin', 'sub-admin'] ||
        // Fallback: check admin_accounts collection
        exists(/databases/$(database)/documents/admin_accounts/$(request.auth.uid))
      );
    }

    function isResident() {
      return isAuthenticated() && (
        request.auth.token.role == 'resident' ||
        request.auth.token.userType == 'resident'
      );
    }

    function isOwner(resourceUserId) {
      return isAuthenticated() && (
        request.auth.uid == resourceUserId ||
        request.auth.token.uniqueId == resourceUserId ||
        request.auth.token.residentId == resourceUserId
      );
    }

    // Admin accounts collection
    match /admin_accounts/{adminId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Residents collection
    match /residents/{residentId} {
      allow read: if isAdmin() || (isResident() && isOwner(residentId));
      allow write: if isAdmin();
    }

    // Document requests
    match /document_requests/{requestId} {
      allow read: if isAdmin() || (isAuthenticated() && resource.data.applicantId == request.auth.uid);
      allow create: if isAuthenticated();
      allow update: if isAdmin() || (isAuthenticated() && resource.data.applicantId == request.auth.uid);
      allow delete: if isAdmin();
    }

    // Business permits
    match /business_permits/{permitId} {
      allow read: if isAdmin() || (isAuthenticated() && resource.data.applicantId == request.auth.uid);
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // Households
    match /households/{householdId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Notifications
    match /notifications/{notificationId} {
      allow read: if isAdmin() || (isAuthenticated() && (
        resource.data.targetUserId == request.auth.uid ||
        resource.data.senderUserId == request.auth.uid
      ));
      allow create: if isAuthenticated();
      allow update: if isAdmin() || (isAuthenticated() && (
        resource.data.targetUserId == request.auth.uid ||
        resource.data.senderUserId == request.auth.uid
      ));
      allow delete: if isAdmin();
    }

    // Counters (for auto-incrementing IDs)
    match /counters/{counterId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // OTPs collection - only accessible by Cloud Functions
    match /otps/{email} {
      allow read, write: if false;
    }

    // Temporary residents (for signup process)
    match /temp_residents/{tempId} {
      allow read, write: if true; // Allow for signup process
    }

    // Email OTPs (for signup process)
    match /email_otps/{tempId} {
      allow read, write: if true; // Allow for signup process
    }

    // Default deny for other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 
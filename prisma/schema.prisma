generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Official {
  residentId   String    @unique(map: "Official_residentId_key")
  position     String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  id           String?
  chairmanship String?
  status       String
  termEnd      DateTime?
  termStart    DateTime?
  resident     Resident  @relation(fields: [residentId], references: [id])

  @@map("official")
}

model Resident {
  id                         String      @id @unique
  firstName                  String
  middleName                 String?
  lastName                   String
  birthdate                  DateTime
  maritalStatus              String
  gender                     String
  createdAt                  DateTime    @default(now())
  updatedAt                  DateTime    @updatedAt
  address                    String
  citizenship                String
  occupation                 String?
  contactNumber              String?
  email                      String?
  isTUPAD                    Boolean     @default(false)
  isPWD                      Boolean     @default(false)
  is4Ps                      Boolean     @default(false)
  isSenior                   Boolean     @default(false)
  isVoter                    Boolean     @default(false)
  photo                      String?
  uniqueId                   String?
  suffix                     String?
  birthplace                 String?
  educationalAttainment      String?
  employmentStatus           String?
  isSoloParent               Boolean     @default(false)
  voterStatus                String?
  household                  Household?  @relation("HouseholdHead")
  logs                       Log[]
  official                   Official?
  household_householdmembers Household[] @relation("householdmembers")

  @@map("resident")
}

model Household {
  id                        String     @id @unique
  headId                    String     @unique(map: "Household_headId_key")
  totalMembers              Int        @default(1)
  address                   String
  contactNumber             String
  createdAt                 DateTime   @default(now())
  updatedAt                 DateTime   @updatedAt
  head                      Resident   @relation("HouseholdHead", fields: [headId], references: [id])
  resident_householdmembers Resident[] @relation("householdmembers")

  @@map("household")
}

model Log {
  id         String   @id
  residentId String
  action     String
  createdAt  DateTime @default(now())
  role       String
  timestamp  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  resident   Resident @relation(fields: [residentId], references: [id])

  @@index([residentId], map: "log_residentId_fkey")
  @@map("log")
}

model Complaint {
  id              String    @id
  type            String
  respondent      String
  complainant     String
  dateFiled       DateTime  @default(now())
  assignedOfficer String
  status          String
  resolutionDate  DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@map("complaint")
}

model Request {
  id            String    @id
  dateFiled     DateTime  @default(now())
  applicantName String
  purpose       String
  type          String
  status        String
  dateIssued    DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("request")
}

model Report {
  id         String   @id
  reportType String
  startDate  DateTime
  endDate    DateTime
  summary    String?
  filePath   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("report")
}

model Document {
  id          String   @id
  type        String
  residentId  String
  createdAt   DateTime @default(now())
  description String?
  filePath    String
  updatedAt   DateTime @updatedAt

  @@map("document")
}

model User {
  id          String   @id @default(uuid())
  firstName   String
  middleName  String?
  lastName    String
  email       String   @unique
  phoneNumber String
  password    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("users")
}
